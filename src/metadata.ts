/* eslint-disable */
export default async () => {
    const t = {};
    return { "@nestjs/graphql/plugin": { "models": [[import("./auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./auth/models/auth.model"), { "Auth": { user: { type: () => Object } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction.model"), { "BTCSettlementTransaction": { id: {}, createdAt: {}, updatedAt: {}, feeCharged: {}, incomingTxnId: {}, orderId: {}, orderplaceTime: {}, soldAtPrice: {}, qtyReceived: {}, status: {}, failedRemarks: {}, incomingTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction.model"), { "BTCIncomingTransaction": { id: {}, createdAt: {}, updatedAt: {}, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {}, settlementTxn: { nullable: true } } }], [import("./@generated/prisma/nested-string-filter.input"), { "NestedStringFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/string-filter.input"), { "StringFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-filter.input"), { "NestedDateTimeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/date-time-filter.input"), { "DateTimeFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-int-filter.input"), { "NestedIntFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/int-filter.input"), { "IntFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-string-nullable-filter.input"), { "NestedStringNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/string-nullable-filter.input"), { "StringNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-nullable-filter.input"), { "NestedDateTimeNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/date-time-nullable-filter.input"), { "DateTimeNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-enum-btc-txn-process-status-filter.input"), { "NestedEnumBTCTxnProcessStatusFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/enum-btc-txn-process-status-filter.input"), { "EnumBTCTxnProcessStatusFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-relation-filter.input"), { "BTCIncomingTransactionRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-where.input"), { "BTCSettlementTransactionWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, incomingTxn: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-nullable-relation-filter.input"), { "BTCSettlementTransactionNullableRelationFilter": { is: { nullable: true }, isNot: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-where.input"), { "BTCIncomingTransactionWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, settlementTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-avg-aggregate.input"), { "BTCIncomingTransactionAvgAggregateInput": { amount: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-avg-order-by-aggregate.input"), { "BTCIncomingTransactionAvgOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-count-aggregate.input"), { "BTCIncomingTransactionCountAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, _all: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-count-order-by-aggregate.input"), { "BTCIncomingTransactionCountOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-create-many.input"), { "BTCIncomingTransactionCreateManyInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {} } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-create-without-settlement-txn.input"), { "BTCIncomingTransactionCreateWithoutSettlementTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {} } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-where-unique.input"), { "BTCIncomingTransactionWhereUniqueInput": { id: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, settlementTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-create-or-connect-without-settlement-txn.input"), { "BTCIncomingTransactionCreateOrConnectWithoutSettlementTxnInput": { where: {}, create: {} } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-create-nested-one-without-settlement-txn.input"), { "BTCIncomingTransactionCreateNestedOneWithoutSettlementTxnInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-create-without-incoming-txn.input"), { "BTCSettlementTransactionCreateWithoutIncomingTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-where-unique.input"), { "BTCSettlementTransactionWhereUniqueInput": { id: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, incomingTxn: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-create-or-connect-without-incoming-txn.input"), { "BTCSettlementTransactionCreateOrConnectWithoutIncomingTxnInput": { where: {}, create: {} } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-create-nested-one-without-incoming-txn.input"), { "BTCSettlementTransactionCreateNestedOneWithoutIncomingTxnInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-create.input"), { "BTCIncomingTransactionCreateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {}, settlementTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-max-aggregate.input"), { "BTCIncomingTransactionMaxAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-max-order-by-aggregate.input"), { "BTCIncomingTransactionMaxOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-min-aggregate.input"), { "BTCIncomingTransactionMinAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-min-order-by-aggregate.input"), { "BTCIncomingTransactionMinOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-sum-order-by-aggregate.input"), { "BTCIncomingTransactionSumOrderByAggregateInput": { amount: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-order-by-with-aggregation.input"), { "BTCIncomingTransactionOrderByWithAggregationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _max: { nullable: true }, _min: { nullable: true }, _sum: { nullable: true } } }], [import("./@generated/prisma/sort-order.input"), { "SortOrderInput": { sort: {}, nulls: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-order-by-with-relation.input"), { "BTCIncomingTransactionOrderByWithRelationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, settlementTxn: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-order-by-with-relation.input"), { "BTCSettlementTransactionOrderByWithRelationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, incomingTxn: { nullable: true } } }], [import("./@generated/prisma/nested-string-with-aggregates-filter.input"), { "NestedStringWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/string-with-aggregates-filter.input"), { "StringWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-with-aggregates-filter.input"), { "NestedDateTimeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/date-time-with-aggregates-filter.input"), { "DateTimeWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/nested-float-filter.input"), { "NestedFloatFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-int-with-aggregates-filter.input"), { "NestedIntWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/int-with-aggregates-filter.input"), { "IntWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _avg: { nullable: true }, _sum: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-scalar-where-with-aggregates.input"), { "BTCIncomingTransactionScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-sum-aggregate.input"), { "BTCIncomingTransactionSumAggregateInput": { amount: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-unchecked-create-without-settlement-txn.input"), { "BTCIncomingTransactionUncheckedCreateWithoutSettlementTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {} } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-create-nested-one-without-incoming-txn.input"), { "BTCSettlementTransactionUncheckedCreateNestedOneWithoutIncomingTxnInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, connect: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-unchecked-create.input"), { "BTCIncomingTransactionUncheckedCreateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: {}, binanceTxnId: {}, txnTime: {}, amount: {}, senderAddress: {}, settlementTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-unchecked-update-many.input"), { "BTCIncomingTransactionUncheckedUpdateManyInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-unchecked-update-without-settlement-txn.input"), { "BTCIncomingTransactionUncheckedUpdateWithoutSettlementTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-update-without-incoming-txn.input"), { "BTCSettlementTransactionUpdateWithoutIncomingTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-upsert-without-incoming-txn.input"), { "BTCSettlementTransactionUpsertWithoutIncomingTxnInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-update-to-one-with-where-without-incoming-txn.input"), { "BTCSettlementTransactionUpdateToOneWithWhereWithoutIncomingTxnInput": { where: { nullable: true }, data: {} } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-update-one-without-incoming-txn-nested.input"), { "BTCSettlementTransactionUncheckedUpdateOneWithoutIncomingTxnNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-unchecked-update.input"), { "BTCIncomingTransactionUncheckedUpdateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, settlementTxn: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-update-many-mutation.input"), { "BTCIncomingTransactionUpdateManyMutationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-update-without-settlement-txn.input"), { "BTCIncomingTransactionUpdateWithoutSettlementTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-upsert-without-settlement-txn.input"), { "BTCIncomingTransactionUpsertWithoutSettlementTxnInput": { update: {}, create: {}, where: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-update-to-one-with-where-without-settlement-txn.input"), { "BTCIncomingTransactionUpdateToOneWithWhereWithoutSettlementTxnInput": { where: { nullable: true }, data: {} } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-update-one-required-without-settlement-txn-nested.input"), { "BTCIncomingTransactionUpdateOneRequiredWithoutSettlementTxnNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-update-one-without-incoming-txn-nested.input"), { "BTCSettlementTransactionUpdateOneWithoutIncomingTxnNestedInput": { create: { nullable: true }, connectOrCreate: { nullable: true }, upsert: { nullable: true }, disconnect: { nullable: true }, delete: { nullable: true }, connect: { nullable: true }, update: { nullable: true } } }], [import("./@generated/btc-incoming-transaction/btc-incoming-transaction-update.input"), { "BTCIncomingTransactionUpdateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, txnHash: { nullable: true }, binanceTxnId: { nullable: true }, txnTime: { nullable: true }, amount: { nullable: true }, senderAddress: { nullable: true }, settlementTxn: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-count-aggregate.input"), { "BTCSettlementTransactionCountAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, _all: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-count-order-by-aggregate.input"), { "BTCSettlementTransactionCountOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-create-many.input"), { "BTCSettlementTransactionCreateManyInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: {}, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-create.input"), { "BTCSettlementTransactionCreateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, incomingTxn: {} } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-max-aggregate.input"), { "BTCSettlementTransactionMaxAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-max-order-by-aggregate.input"), { "BTCSettlementTransactionMaxOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-min-aggregate.input"), { "BTCSettlementTransactionMinAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-min-order-by-aggregate.input"), { "BTCSettlementTransactionMinOrderByAggregateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-order-by-with-aggregation.input"), { "BTCSettlementTransactionOrderByWithAggregationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/prisma/nested-int-nullable-filter.input"), { "NestedIntNullableFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true } } }], [import("./@generated/prisma/nested-string-nullable-with-aggregates-filter.input"), { "NestedStringNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/string-nullable-with-aggregates-filter.input"), { "StringNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, contains: { nullable: true }, startsWith: { nullable: true }, endsWith: { nullable: true }, mode: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/nested-date-time-nullable-with-aggregates-filter.input"), { "NestedDateTimeNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/date-time-nullable-with-aggregates-filter.input"), { "DateTimeNullableWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, lt: { nullable: true }, lte: { nullable: true }, gt: { nullable: true }, gte: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/nested-enum-btc-txn-process-status-with-aggregates-filter.input"), { "NestedEnumBTCTxnProcessStatusWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/prisma/enum-btc-txn-process-status-with-aggregates-filter.input"), { "EnumBTCTxnProcessStatusWithAggregatesFilter": { equals: { nullable: true }, in: { nullable: true }, notIn: { nullable: true }, not: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-scalar-where-with-aggregates.input"), { "BTCSettlementTransactionScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-create-without-incoming-txn.input"), { "BTCSettlementTransactionUncheckedCreateWithoutIncomingTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-create.input"), { "BTCSettlementTransactionUncheckedCreateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: {}, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-update-many.input"), { "BTCSettlementTransactionUncheckedUpdateManyInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-update-without-incoming-txn.input"), { "BTCSettlementTransactionUncheckedUpdateWithoutIncomingTxnInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-unchecked-update.input"), { "BTCSettlementTransactionUncheckedUpdateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, incomingTxnId: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-update-many-mutation.input"), { "BTCSettlementTransactionUpdateManyMutationInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true } } }], [import("./@generated/btc-settlement-transaction/btc-settlement-transaction-update.input"), { "BTCSettlementTransactionUpdateInput": { id: { nullable: true }, createdAt: { nullable: true }, updatedAt: { nullable: true }, feeCharged: { nullable: true }, orderId: { nullable: true }, orderplaceTime: { nullable: true }, soldAtPrice: { nullable: true }, qtyReceived: { nullable: true }, status: { nullable: true }, failedRemarks: { nullable: true }, incomingTxn: { nullable: true } } }], [import("./@generated/prisma/aggregate-btc-incoming-transaction.args"), { "AggregateBtcIncomingTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/aggregate-btc-settlement-transaction.args"), { "AggregateBtcSettlementTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/create-many-btc-incoming-transaction.args"), { "CreateManyBtcIncomingTransactionArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-many-btc-settlement-transaction.args"), { "CreateManyBtcSettlementTransactionArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/prisma/create-one-btc-incoming-transaction.args"), { "CreateOneBtcIncomingTransactionArgs": { data: {} } }], [import("./@generated/prisma/create-one-btc-settlement-transaction.args"), { "CreateOneBtcSettlementTransactionArgs": { data: {} } }], [import("./@generated/prisma/delete-many-btc-incoming-transaction.args"), { "DeleteManyBtcIncomingTransactionArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-many-btc-settlement-transaction.args"), { "DeleteManyBtcSettlementTransactionArgs": { where: { nullable: true } } }], [import("./@generated/prisma/delete-one-btc-incoming-transaction.args"), { "DeleteOneBtcIncomingTransactionArgs": { where: {} } }], [import("./@generated/prisma/delete-one-btc-settlement-transaction.args"), { "DeleteOneBtcSettlementTransactionArgs": { where: {} } }], [import("./@generated/prisma/find-first-btc-incoming-transaction-or-throw.args"), { "FindFirstBtcIncomingTransactionOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-first-btc-incoming-transaction.args"), { "FindFirstBtcIncomingTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-first-btc-settlement-transaction-or-throw.args"), { "FindFirstBtcSettlementTransactionOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-first-btc-settlement-transaction.args"), { "FindFirstBtcSettlementTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-many-btc-incoming-transaction.args"), { "FindManyBtcIncomingTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-many-btc-settlement-transaction.args"), { "FindManyBtcSettlementTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/prisma/find-unique-btc-incoming-transaction-or-throw.args"), { "FindUniqueBtcIncomingTransactionOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-unique-btc-incoming-transaction.args"), { "FindUniqueBtcIncomingTransactionArgs": { where: {} } }], [import("./@generated/prisma/find-unique-btc-settlement-transaction-or-throw.args"), { "FindUniqueBtcSettlementTransactionOrThrowArgs": { where: {} } }], [import("./@generated/prisma/find-unique-btc-settlement-transaction.args"), { "FindUniqueBtcSettlementTransactionArgs": { where: {} } }], [import("./@generated/prisma/group-by-btc-incoming-transaction.args"), { "GroupByBtcIncomingTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/group-by-btc-settlement-transaction.args"), { "GroupByBtcSettlementTransactionArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true } } }], [import("./@generated/prisma/update-many-btc-incoming-transaction.args"), { "UpdateManyBtcIncomingTransactionArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-many-btc-settlement-transaction.args"), { "UpdateManyBtcSettlementTransactionArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/prisma/update-one-btc-incoming-transaction.args"), { "UpdateOneBtcIncomingTransactionArgs": { data: {}, where: {} } }], [import("./@generated/prisma/update-one-btc-settlement-transaction.args"), { "UpdateOneBtcSettlementTransactionArgs": { data: {}, where: {} } }], [import("./@generated/prisma/upsert-one-btc-incoming-transaction.args"), { "UpsertOneBtcIncomingTransactionArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/prisma/upsert-one-btc-settlement-transaction.args"), { "UpsertOneBtcSettlementTransactionArgs": { where: {}, create: {}, update: {} } }], [import("./@generated/sync-details/sync-details-create-many.input"), { "SyncDetailsCreateManyInput": { id: { nullable: true }, lastSyncedAt: {}, actionName: {}, metadata: { nullable: true } } }], [import("./@generated/sync-details/create-many-sync-details.args"), { "CreateManySyncDetailsArgs": { data: {}, skipDuplicates: { nullable: true } } }], [import("./@generated/sync-details/sync-details-create.input"), { "SyncDetailsCreateInput": { id: { nullable: true }, lastSyncedAt: {}, actionName: {}, metadata: { nullable: true } } }], [import("./@generated/sync-details/create-one-sync-details.args"), { "CreateOneSyncDetailsArgs": { data: {} } }], [import("./@generated/sync-details/sync-details-where.input"), { "SyncDetailsWhereInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/delete-many-sync-details.args"), { "DeleteManySyncDetailsArgs": { where: { nullable: true } } }], [import("./@generated/sync-details/sync-details-where-unique.input"), { "SyncDetailsWhereUniqueInput": { id: { nullable: true }, actionName: { nullable: true }, AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, lastSyncedAt: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/delete-one-sync-details.args"), { "DeleteOneSyncDetailsArgs": { where: {} } }], [import("./@generated/sync-details/sync-details-order-by-with-relation.input"), { "SyncDetailsOrderByWithRelationInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/find-first-sync-details-or-throw.args"), { "FindFirstSyncDetailsOrThrowArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/sync-details/find-first-sync-details.args"), { "FindFirstSyncDetailsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/sync-details/find-many-sync-details.args"), { "FindManySyncDetailsArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, distinct: { nullable: true } } }], [import("./@generated/sync-details/find-unique-sync-details-or-throw.args"), { "FindUniqueSyncDetailsOrThrowArgs": { where: {} } }], [import("./@generated/sync-details/find-unique-sync-details.args"), { "FindUniqueSyncDetailsArgs": { where: {} } }], [import("./@generated/sync-details/sync-details-count-aggregate.input"), { "SyncDetailsCountAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true }, _all: { nullable: true } } }], [import("./@generated/sync-details/sync-details-min-aggregate.input"), { "SyncDetailsMinAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-max-aggregate.input"), { "SyncDetailsMaxAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-aggregate.args"), { "SyncDetailsAggregateArgs": { where: { nullable: true }, orderBy: { nullable: true }, cursor: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/sync-details/sync-details-count-order-by-aggregate.input"), { "SyncDetailsCountOrderByAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-max-order-by-aggregate.input"), { "SyncDetailsMaxOrderByAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-min-order-by-aggregate.input"), { "SyncDetailsMinOrderByAggregateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-order-by-with-aggregation.input"), { "SyncDetailsOrderByWithAggregationInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true }, _count: { nullable: true }, _max: { nullable: true }, _min: { nullable: true } } }], [import("./@generated/sync-details/sync-details-scalar-where-with-aggregates.input"), { "SyncDetailsScalarWhereWithAggregatesInput": { AND: { nullable: true }, OR: { nullable: true }, NOT: { nullable: true }, id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-group-by.args"), { "SyncDetailsGroupByArgs": { where: { nullable: true }, orderBy: { nullable: true }, by: {}, having: { nullable: true }, take: { nullable: true }, skip: { nullable: true }, _count: { nullable: true }, _min: { nullable: true }, _max: { nullable: true } } }], [import("./@generated/sync-details/sync-details-unchecked-create.input"), { "SyncDetailsUncheckedCreateInput": { id: { nullable: true }, lastSyncedAt: {}, actionName: {}, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-unchecked-update-many.input"), { "SyncDetailsUncheckedUpdateManyInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-unchecked-update.input"), { "SyncDetailsUncheckedUpdateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-update-many-mutation.input"), { "SyncDetailsUpdateManyMutationInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details-update.input"), { "SyncDetailsUpdateInput": { id: { nullable: true }, lastSyncedAt: { nullable: true }, actionName: { nullable: true }, metadata: { nullable: true } } }], [import("./@generated/sync-details/sync-details.model"), { "SyncDetails": { id: {}, lastSyncedAt: {}, actionName: {}, metadata: {} } }], [import("./@generated/sync-details/update-many-sync-details.args"), { "UpdateManySyncDetailsArgs": { data: {}, where: { nullable: true } } }], [import("./@generated/sync-details/update-one-sync-details.args"), { "UpdateOneSyncDetailsArgs": { data: {}, where: {} } }], [import("./@generated/sync-details/upsert-one-sync-details.args"), { "UpsertOneSyncDetailsArgs": { where: {}, create: {}, update: {} } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }]] } };
};